<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Spring 2021</title>
    <link>http://ryderdaniel.github.io/</link>
    <description>Recent content in Home on Spring 2021</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Feb 2021 00:43:14 +0800</lastBuildDate>
    
	<atom:link href="http://ryderdaniel.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lecture 6</title>
      <link>http://ryderdaniel.github.io/ELEC1200/Lecture6/</link>
      <pubDate>Thu, 04 Mar 2021 16:33:28 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/ELEC1200/Lecture6/</guid>
      <description>Trade-Off Between bit-rate and BER  Bit rate - the number of bits that can be transmitter per second (we want this to be as high as possible) Bit Error Rate (BER) - Fraction of bits that are wrongly decoded by the reciever.  We want this to be low BER rate decreases as bit time increases BER increases with smaller bit time (SPB) BER increases if the channel is noisier or if we use less power to transmit a signal.</description>
    </item>
    
    <item>
      <title>Lecture 5</title>
      <link>http://ryderdaniel.github.io/ELEC1200/Lecture5/</link>
      <pubDate>Thu, 04 Mar 2021 15:14:31 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/ELEC1200/Lecture5/</guid>
      <description>Protocols Agreement on a set of rules or procedures to follow during communication.   Protocols are necessary for any communication system  Without them, one can hear but not understand    Protocols in Data Communication Systems  In data communication, protocols cover all aspects of data representation and signalling including:  The representation of text characters The order in which bit sequences are sent    Decoding Bits Thresholding  In our system, for long SPBs at the reciever:  &amp;ldquo;1&amp;rdquo; bits correspond to a number of samples with value c + k &amp;ldquo;0&amp;rdquo; bits correspond to a number of samples with value c Thus we can decide whether a bit is 0 or 1 by comparing to a threshold of c + k/2 Let $r(n)$ be the recieved signal at time $n$, and $b(n)$ the result of thresholding:</description>
    </item>
    
    <item>
      <title>Examples of One-Key Block Ciphers</title>
      <link>http://ryderdaniel.github.io/COMP4631/05.-Examples-of-One-Key-Block-Ciphers/</link>
      <pubDate>Wed, 03 Mar 2021 09:06:05 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/COMP4631/05.-Examples-of-One-Key-Block-Ciphers/</guid>
      <description>One-key Stream Ciphers A 6-tuple $(\mathcal M, \mathcal C, \mathcal K, E_k, D_k, u)$ where:
 $\mathcal M, \mathcal C, \mathcal K$ are respectively the plaintext space, ciphertext space, and key space. Any $k \in \mathcal K$ could be the encryption and decryption key $u$ is a time-variable parameter stored in a memory device. $E_k$ and $D_k$ are encryption and decryption transformations with
$D_k(E_k(m,u),u)=m,\ \forall m \in \mathcal M$  Remark: The ciphertext $c=E_k(m,u)$ depends on $k, m$ and $u$ and is time dependent, as $u$ is time-variable.</description>
    </item>
    
    <item>
      <title>One Key Block Ciphers</title>
      <link>http://ryderdaniel.github.io/COMP4631/04.-One-Key-Block-Ciphers/</link>
      <pubDate>Tue, 02 Mar 2021 17:19:32 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/COMP4631/04.-One-Key-Block-Ciphers/</guid>
      <description>One-Key Block Ciphers Defined as a 5-tuple $(\mathcal M, \mathcal C, \mathcal K, E_k, D_k)$, where:
 $\mathcal M$ is the plaintext space. $\mathcal C$ is the ciphertext space. $\mathcal K$ is the key space. Any $k \in \mathcal K$ could be the encrytption and decryption key. $E_k$ and $D_k$ are encryption and decryption transformations with
$D_k(E_k(m)) = m,\ \forall m \in \mathcal M$  Direct Usage of One-Key Block Ciphers Given a block cipher $(\mathcal M, \mathcal C, \mathcal K, E_k, D_k)$, encryption and decrytion is done as follows:</description>
    </item>
    
    <item>
      <title>Introduction to Cryptography</title>
      <link>http://ryderdaniel.github.io/COMP4631/03.-Introduction-to-Cryptography/</link>
      <pubDate>Tue, 02 Mar 2021 15:54:06 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/COMP4631/03.-Introduction-to-Cryptography/</guid>
      <description>Data Confidentiality Data in transmission or stored in a storage system could be very sensitive and only authorized people are allowed to read it. Data confidentiality means the prevention of unauthorized reading of data.
How to Achieve Data Confidentiality? By Encryption.
i.e. Use a secret 1-1 mapping (function) $f$ to map a plaintext $m$ into a ciphertext $c$. $c = f(m)$.
To recover the plaintext $m$ from the ciphertext $c$, apply the inverse mapping $f^{-1}$ to $c$ yielding</description>
    </item>
    
    <item>
      <title>Lecture4</title>
      <link>http://ryderdaniel.github.io/ELEC1200/Lecture4/</link>
      <pubDate>Thu, 25 Feb 2021 18:00:13 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/ELEC1200/Lecture4/</guid>
      <description>Linear Time Invariant Systems Systems  For this class, a system is something that takes a waveform $x(n)$ and produces an output waveform $y(n)$ e.g. a channel.  Linear Systems  A linear system is a system that satisfies the following two properties:  Homogeneity:
$$x(n) \to |\text{ system }| \to y(n) \implies c \cdot x(n) \to |\text{ system }| \to c \cdot y(n)$$  If you scale the input by $c$ times, the output is also scaled by $c$ times.</description>
    </item>
    
    <item>
      <title>Lecture3</title>
      <link>http://ryderdaniel.github.io/ELEC1200/Lecture3/</link>
      <pubDate>Thu, 25 Feb 2021 13:17:07 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/ELEC1200/Lecture3/</guid>
      <description>Representing Bit Waveforms Equivalent Representations of Waveforms  Verbal: The encoding of the bit sequence $1010001$ at 4 samples per bit. Graph:
 List, Table or Vector of Values:
$n = [0, 1, 2, 3, &amp;hellip;]$
$x(n) = [1, 1, 1, 0, &amp;hellip;]$ Sum of Unit Step Functions:
$x(n) = u(n) - u(n-4) + u(n-8) + &amp;hellip; + u(n + m)$  Uses for Different Representations  The four representations are equivalent in that if we know one, we can obtain any of the others.</description>
    </item>
    
    <item>
      <title>Lecture2</title>
      <link>http://ryderdaniel.github.io/ELEC1200/Lecture2/</link>
      <pubDate>Thu, 25 Feb 2021 10:55:00 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/ELEC1200/Lecture2/</guid>
      <description>Recap of Lecture 1 Representing Bit Sequences as Waveforms  A bit sequence can be encoded by changing the value of a physical variable over time Each bit is encoded by holding the state constant over a length of time known as the bit time. The shorter the bit time, the faster we can transmit information (bits).  Encoding information with Bits Bits  A bit is the basic unit of information used in modern computers and communication systems.</description>
    </item>
    
    <item>
      <title>Discrete Math Review</title>
      <link>http://ryderdaniel.github.io/COMP4631/02.-Discrete-Math-Review/</link>
      <pubDate>Sat, 06 Feb 2021 10:48:17 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/COMP4631/02.-Discrete-Math-Review/</guid>
      <description>Discrete Mathematics Review  Sets A set is a collection of distinct objects.  Members and Elements  The objects that make up a set are called members or elements of the set. An object is anything that is &amp;ldquo;meaningful&amp;rdquo;. For example: a number, equation, other sets, etc&amp;hellip;  Equality of Sets  Two sets are equal if and only if they have the same members. That is, a set is completely determined by its members.</description>
    </item>
    
    <item>
      <title>Course Introduction and Physical Security</title>
      <link>http://ryderdaniel.github.io/COMP4631/01.-Introduction-and-Physical-Security/</link>
      <pubDate>Thu, 04 Feb 2021 16:22:55 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/COMP4631/01.-Introduction-and-Physical-Security/</guid>
      <description>Course Introduction and Physical Security Topics to be Covered  Computer Security: An Introduction Conventional Cryptosystems Public-Key Cryptosystems Key Management Hash Functions, Authentication Digital Signature, Identification Access Control Unix Security Windows NT Security Distributed System Security Network Security IP Security Email Security Web Security Firewalls Virtual Private Networks  Reference Books  Behrouz A. Forouz, Cryptography and Network Security, McGraw Hill, 2008. D. Gollmann, Computer Security, John Wiley &amp;amp; Sons, 1999.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://ryderdaniel.github.io/about/</link>
      <pubDate>Thu, 04 Feb 2021 15:06:37 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/about/</guid>
      <description>Some big markdown smaller&amp;hellip; </description>
    </item>
    
  </channel>
</rss>