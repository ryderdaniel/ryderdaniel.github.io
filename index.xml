<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Spring 2021</title>
    <link>http://ryderdaniel.github.io/</link>
    <description>Recent content in Home on Spring 2021</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Feb 2021 00:43:14 +0800</lastBuildDate>
    
	<atom:link href="http://ryderdaniel.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lecture3</title>
      <link>http://ryderdaniel.github.io/ELEC1200/Lecture3/</link>
      <pubDate>Thu, 25 Feb 2021 13:17:07 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/ELEC1200/Lecture3/</guid>
      <description>Representing Bit Waveforms Equivalent Representations of Waveforms  Verbal: The encoding of the bit sequence $1010001$ at 4 samples per bit. Graph:
 List, Table or Vector of Values:
$n = [0, 1, 2, 3, &amp;hellip;]$
$x(n) = [1, 1, 1, 0, &amp;hellip;]$ Sum of Unit Step Functions:
$x(n) = u(n) - u(n-4) + u(n-8) + &amp;hellip; + u(n + m)$  Uses for Different Representations  The four representations are equivalent in that if we know one, we can obtain any of the others.</description>
    </item>
    
    <item>
      <title>Lecture2</title>
      <link>http://ryderdaniel.github.io/ELEC1200/Lecture2/</link>
      <pubDate>Thu, 25 Feb 2021 10:55:00 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/ELEC1200/Lecture2/</guid>
      <description>Recap of Lecture 1 Representing Bit Sequences as Waveforms  A bit sequence can be encoded by changing the value of a physical variable over time Each bit is encoded by holding the state constant over a length of time known as the bit time. The shorter the bit time, the faster we can transmit information (bits).  Encoding information with Bits Bits  A bit is the basic unit of information used in modern computers and communication systems.</description>
    </item>
    
    <item>
      <title>Discrete Math Review</title>
      <link>http://ryderdaniel.github.io/COMP4631/02.-Discrete-Math-Review/</link>
      <pubDate>Sat, 06 Feb 2021 10:48:17 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/COMP4631/02.-Discrete-Math-Review/</guid>
      <description>Discrete Mathematics Review  Sets A set is a collection of distinct objects.  Members and Elements  The objects that make up a set are called members or elements of the set. An object is anything that is &amp;ldquo;meaningful&amp;rdquo;. For example: a number, equation, other sets, etc&amp;hellip;  Equality of Sets  Two sets are equal if and only if they have the same members. That is, a set is completely determined by its members.</description>
    </item>
    
    <item>
      <title>Course Introduction and Physical Security</title>
      <link>http://ryderdaniel.github.io/COMP4631/01.-Introduction-and-Physical-Security/</link>
      <pubDate>Thu, 04 Feb 2021 16:22:55 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/COMP4631/01.-Introduction-and-Physical-Security/</guid>
      <description>Course Introduction and Physical Security Topics to be Covered  Computer Security: An Introduction Conventional Cryptosystems Public-Key Cryptosystems Key Management Hash Functions, Authentication Digital Signature, Identification Access Control Unix Security Windows NT Security Distributed System Security Network Security IP Security Email Security Web Security Firewalls Virtual Private Networks  Reference Books  Behrouz A. Forouz, Cryptography and Network Security, McGraw Hill, 2008. D. Gollmann, Computer Security, John Wiley &amp;amp; Sons, 1999.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://ryderdaniel.github.io/about/</link>
      <pubDate>Thu, 04 Feb 2021 15:06:37 +0800</pubDate>
      
      <guid>http://ryderdaniel.github.io/about/</guid>
      <description>Some big markdown smaller&amp;hellip; </description>
    </item>
    
  </channel>
</rss>